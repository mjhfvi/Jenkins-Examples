credentials:
  system:
    domainCredentials:
    - credentials:
      - basicSSHUserPrivateKey:
          description: "GitHub SSH Access Credentials to JobAssignment Git"
          id: "GitHub-SSH-Access-Credentials-to-JobAssignment-Git"
          privateKeySource:
            directEntry:
              privateKey: "{}"
          scope: GLOBAL
          username: "mjhfvi@gmail.com"
          usernameSecret: true
      - usernamePassword:
          description: "Docker Hub Login Credentials"
          id: "Docker-Hub-Login-Credentials"
          password: "{}"
          scope: GLOBAL
          username: "mjhfvi"
          usernameSecret: true
      - string:
          description: "Private Aws Access Key"
          id: "Aws-Access-Key"
          scope: GLOBAL
          secret: "{}"
      - string:
          description: "Private Aws Secret Key"
          id: "Aws-Secret-Key"
          scope: GLOBAL
          secret: "{}"
jenkins:
  agentProtocols:
  - "JNLP4-connect"
  - "Ping"
  authorizationStrategy:
    loggedInUsersCanDoAnything:
      allowAnonymousRead: false
  clouds:
  - kubernetes:
      containerCap: 10
      containerCapStr: "10"
      jenkinsTunnel: "jenkins-agent.jenkins.svc.cluster.local:50000"
      jenkinsUrl: "http://jenkins.localhost/"
      name: "kubernetes"
      namespace: "jenkins"
      podLabels:
      - key: "jenkins/jenkins-jenkins-agent"
        value: "true"
      serverUrl: "https://kubernetes.default"
      templates:
      - containers:
        - args: "^${computer.jnlpmac} ^${computer.name}"
          envVars:
          - envVar:
              key: "JENKINS_URL"
              value: "http://jenkins.localhost/"
          image: "jenkins/inbound-agent:3248.v65ecb_254c298-1"
          name: "jnlp"
          resourceLimitCpu: "512m"
          resourceLimitMemory: "512Mi"
          resourceRequestCpu: "512m"
          resourceRequestMemory: "512Mi"
          workingDir: "/home/jenkins/agent"
        id: ""
        label: "jenkins-jenkins-agent"
        name: "default"
        namespace: "jenkins"
        nodeUsageMode: "NORMAL"
        podRetention: "never"
        serviceAccount: "default"
        slaveConnectTimeout: 100
        slaveConnectTimeoutStr: "100"
        yamlMergeStrategy: "override"
  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: true
  disableRememberMe: false
  disabledAdministrativeMonitors:
  - "hudson.util.DoubleLaunchChecker"
  globalNodeProperties:
  - diskSpaceMonitor:
      freeDiskSpaceThreshold: "5GiB"
      freeDiskSpaceWarningThreshold: "10GiB"
      freeTempSpaceThreshold: "5GiB"
      freeTempSpaceWarningThreshold: "10GiB"
  - envVars:
      env:
      - key: "PATH+EXTRA"
        value: "/home/tzahi/.local/bin/"
  labelAtoms:
  - name: "WSL-Ubuntu-Node"
  - name: "built-in"
  - name: "jenkins-jenkins-agent"
  - name: "linux"
  markupFormatter: "plainText"
  mode: EXCLUSIVE
  myViewsTabBar: "standard"
  noUsageStatistics: true
  nodeMonitors:
  - "architecture"
  - "clock"
  - diskSpace:
      freeSpaceThreshold: "1GiB"
      freeSpaceWarningThreshold: "2GiB"
  - "swapSpace"
  - tmpSpace:
      freeSpaceThreshold: "1GiB"
      freeSpaceWarningThreshold: "2GiB"
  - "responseTime"
  nodes:
  - permanent:
      labelString: "linux"
      launcher: "inbound"
      name: "WSL-Ubuntu-Node"
      remoteFS: "/home/tzahi/jenkins/"
      retentionStrategy: "always"
  numExecutors: 0
  primaryView:
    all:
      name: "all"
  projectNamingStrategy: "standard"
  quietPeriod: 5
  remotingSecurity:
    enabled: true
  scmCheckoutRetryCount: 0
  securityRealm:
    local:
      allowsSignup: false
      enableCaptcha: false
      users:
      - id: "admin"
        name: "Jenkins Admin"
        properties:
        - "apiToken"
        - "consoleUrlProvider"
        - "mailer"
        - "myView"
        - preferredProvider:
            providerId: "default"
        - "theme"
        - "timezone"
        - "experimentalFlags"
  slaveAgentPort: 50000
  systemMessage: "Welcome Back, Have A Nice Day!!"
  updateCenter:
    sites:
    - id: "default"
      url: "https://updates.jenkins.io/update-center.json"
  views:
  - all:
      name: "all"
  viewsTabBar: "standard"
globalCredentialsConfiguration:
  configuration:
    providerFilter: "none"
    typeFilter: "none"
appearance:
  pipelineGraphView:
    showGraphOnBuildPage: false
    showGraphOnJobPage: false
  prism:
    theme: PRISM
  themeManager:
    disableUserThemes: false
    theme: "dark"
security:
  apiToken:
    creationOfLegacyTokenEnabled: false
    tokenGenerationOnCreationEnabled: false
    usageStatisticsEnabled: true
  badgePlugin:
    disableFormatHTML: false
  gitHooks:
    allowedOnAgents: false
    allowedOnController: false
  gitHostKeyVerificationConfiguration:
    sshHostKeyVerificationStrategy: "knownHostsFileVerificationStrategy"
  sSHD:
    port: -1
  scriptApproval:
    approvedSignatures:
    - "method hudson.model.Run getLog int"
unclassified:
  ansiColorBuildWrapper:
    colorMaps:
    - black: "#000000"
      blackB: "#4C4C4C"
      blue: "#1E90FF"
      blueB: "#4682B4"
      cyan: "#00CDCD"
      cyanB: "#00FFFF"
      green: "#00CD00"
      greenB: "#00FF00"
      magenta: "#CD00CD"
      magentaB: "#FF00FF"
      name: "xterm"
      red: "#CD0000"
      redB: "#FF0000"
      white: "#E5E5E5"
      whiteB: "#FFFFFF"
      yellow: "#CDCD00"
      yellowB: "#FFFF00"
    - black: "#000000"
      blackB: "#555555"
      blue: "#0000AA"
      blueB: "#5555FF"
      cyan: "#00AAAA"
      cyanB: "#55FFFF"
      defaultBackground: 0
      defaultForeground: 7
      green: "#00AA00"
      greenB: "#55FF55"
      magenta: "#AA00AA"
      magentaB: "#FF55FF"
      name: "vga"
      red: "#AA0000"
      redB: "#FF5555"
      white: "#AAAAAA"
      whiteB: "#FFFFFF"
      yellow: "#AA5500"
      yellowB: "#FFFF55"
    - black: "black"
      blackB: "black"
      blue: "blue"
      blueB: "blue"
      cyan: "cyan"
      cyanB: "cyan"
      green: "green"
      greenB: "green"
      magenta: "magenta"
      magentaB: "magenta"
      name: "css"
      red: "red"
      redB: "red"
      white: "white"
      whiteB: "white"
      yellow: "yellow"
      yellowB: "yellow"
    - black: "#2E3436"
      blackB: "#2E3436"
      blue: "#3465A4"
      blueB: "#3465A4"
      cyan: "#06989A"
      cyanB: "#06989A"
      defaultBackground: 0
      defaultForeground: 7
      green: "#4E9A06"
      greenB: "#4E9A06"
      magenta: "#75507B"
      magentaB: "#75507B"
      name: "gnome-terminal"
      red: "#CC0000"
      redB: "#CC0000"
      white: "#D3D7CF"
      whiteB: "#D3D7CF"
      yellow: "#C4A000"
      yellowB: "#C4A000"
    globalColorMapName: "xterm"
  buildDiscarders:
    configuredBuildDiscarders:
    - "jobBuildDiscarder"
  fingerprints:
    fingerprintCleanupDisabled: false
    storage: "file"
  gitHubPluginConfig:
    hookUrl: "http://jenkins.localhost/github-webhook/"
  junitTestResultStorage:
    storage: "file"
  location:
    adminAddress: "mjhfvi@gmail.com"
    url: "http://jenkins.localhost/"
  mailer:
    charset: "UTF-8"
    useSsl: false
    useTls: false
  pollSCM:
    pollingThreadCount: 10
  scmGit:
    addGitTagAction: false
    allowSecondFetch: false
    createAccountBasedOnEmail: false
    disableGitToolChooser: false
    globalConfigEmail: "mjhfvi@gmail.com"
    globalConfigName: "Tzahi Cohen"
    hideCredentials: false
    showEntireCommitSummaryInChanges: false
    useExistingAccountWithSameEmail: false
  separator:
    globalSectionHeaderStyle: "font-weight: bold;"
tool:
  customTool:
    installations:
    - exportedPaths: "/home/tzahi/.local/bin/"
      name: "Autopep8"
      properties:
      - installSource:
          installers:
          - anyOf:
              installers:
                installers:
                - findonpath:
                    executableName: "autopep8"
                    label: "linux"
                - command:
                    command: "pip install --upgrade autopep8"
                    label: "linux"
                    toolHome: "/home/tzahi/.local/bin/"
                - sharedDirectoryInstaller:
                    failOnSubstitution: false
                    label: "linux"
                    toolHome: "/home/tzahi/.local/bin/"
  git:
    installations:
    - home: "git"
      name: "Default"
  mavenGlobalConfig:
    globalSettingsProvider: "standard"
    settingsProvider: "standard"
